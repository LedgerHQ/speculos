name: Fast checks

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
  pull_request:

jobs:
  linter-python:
    name: Linter on Python code
    runs-on: ubuntu-latest
    steps:
    - name: Clone
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Python dependency
      run: pip install flake8
    - name: Lint Python code
      run: find speculos/ -type f -name '*.py' -exec flake8 --max-line-length=120 '{}' '+'

  linter-c:
    name: Linter on C code
    runs-on: ubuntu-latest
    steps:
    - name: Clone
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Lint C code
      uses: DoozyX/clang-format-lint-action@v0.16.1
      with:
        source: 'src tests'
        extensions: 'c,h'
        clangFormatVersion: 11

  mypy:
    name: Type checking
    runs-on: ubuntu-latest
    steps:
    - name: Clone
      uses: actions/checkout@v3
    - run: pip install mypy types-requests types-setuptools PyQt5-stubs
    - name: Mypy type checking
      run: mypy speculos

  bandit:
    name: Security checking
    runs-on: ubuntu-latest
    steps:
    - name: Clone
      uses: actions/checkout@v3
    - run: pip install bandit
    - name: Bandit security checking
      run: bandit -r speculos -ll || echo 0

  misspell:
    name: Check misspellings
    runs-on: ubuntu-latest
    steps:
    - name: Clone
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Check misspellings
      uses: codespell-project/actions-codespell@v1
      with:
        builtin: clear,rare
        check_filenames: true
        ignore_words_file: .codespell-ignore
        skip: ./speculos/api/static/swagger/swagger-ui.css,./speculos/api/static/swagger/swagger-ui-bundle.js,./speculos/api/static/swagger/swagger-ui-standalone-preset.js,./speculos/fonts

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    container:
      image: docker://ghcr.io/ledgerhq/speculos-builder:latest
    steps:
    - name: Clone
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Rebuild with code coverage instrumentation
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
        RNG_SEED: 0
      run: |
        cmake -Bbuild -H. -DPRECOMPILED_DEPENDENCIES_DIR=/install -DWITH_VNC=1 -DCODE_COVERAGE=ON
        make -C build clean
        make -C build
        make -C build test
        python3 -m pip install pytest-cov
        python3 -m pytest --cov=speculos --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        name: codecov-speculos
