name: Functional tests using Ragger and latest speculos

on:
  workflow_call:
    inputs:
      app_repository:
        required: false
        default: ${{ github.repository }}
        type: string
      app_branch_name:
        required: false
        default: ${{ github.ref }}
        type: string

jobs:
  build_application:
    name: Build application using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      app_repository: ${{ inputs.app_repository }}
      app_branch_name: ${{ inputs.app_branch_name }}
      upload_app_binaries_artifact: compiled_app_binaries-${{ inputs.app_branch_name }}
      builder: ledger-app-builder

  build_docker_image:
    name: Build Speculos Docker image
    runs-on: ubuntu-latest
    steps:
    - name: Clone
      uses: actions/checkout@v4
      with:
          submodules: recursive
          fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build the Speculos docker
      uses: docker/build-push-action@v4
      with:
        push: false
        tags: ledgerhq/speculos:test
        context: .
        outputs: type=docker,dest=/tmp/speculos_image.tar
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: speculos_image-${{ inputs.app_branch_name }}
        path: /tmp/speculos_image.tar

  call_get_app_metadata:
    name: Retrieve application metadata
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/_get_app_metadata.yml@v1
    with:
      app_repository: ${{ inputs.app_repository }}
      app_branch_name: ${{ inputs.app_branch_name }}

  ragger_tests:
    name: Functional tests with Ragger
    runs-on: ubuntu-latest
    needs: [build_docker_image, build_application, call_get_app_metadata]
    strategy:
      fail-fast: false
      matrix:
        device: ${{ fromJSON(needs.call_get_app_metadata.outputs.compatible_devices) }}

    steps:
    - name: Clone
      uses: actions/checkout@v4
      with:
          repository: ledgerHQ/speculos
          ref: ${{ inputs.speculos_app_branch_name }}
          submodules: recursive
          fetch-depth: 0

    - name: Clone
      uses: actions/checkout@v4
      with:
          repository: ${{ inputs.app_repository }}
          ref: ${{ inputs.app_branch_name }}
          path: app
          submodules: recursive
          fetch-depth: 0

    - name: Prepare test conditions
      shell: bash
      run: |
        pip install ledgered

        # Get Test directory from manifest
        TEST_DIR=$(ledger-manifest -otp "./app/ledger_app.toml")
        if [ -z "${TEST_DIR}" ]; then
          echo "No test directory found" && exit 1
        fi
        echo "TEST_DIR=${TEST_DIR}" >> $GITHUB_ENV

        # Get SDK from manifest
        SDK=$(ledger-manifest -os "./app/ledger_app.toml")
        if [ -z "${SDK}" ]; then
          echo "No sdk defined" && exit 1
        fi
        echo "SDK=${SDK,,}" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: speculos_image-${{ inputs.app_branch_name }}
        path: /tmp

    - name: Load image
      run: |
        docker load --input /tmp/speculos_image.tar
        docker image ls -a

    - name: Download app binaries
      uses: actions/download-artifact@v4
      with:
        name: compiled_app_binaries-${{ inputs.app_branch_name }}
        path: ${{ github.workspace }}/app/${{ env.SDK == 'c' && 'build' || 'target' }}

    - name: Run and test Speculos docker for C apps
      if: ${{ env.SDK == 'c' }}
      uses: addnab/docker-run-action@v3
      with:
        image: ledgerhq/speculos:test
        options: -v ${{ github.workspace }}/app:/app
        run: |
            apt-get update && apt-get install -y gcc
            pip install -r /app/${{ env.TEST_DIR }}/requirements.txt
            pytest /app/${{ env.TEST_DIR }}/ --tb=short -v --device ${{ matrix.device }}

    - name: Run and test Speculos docker for Rust apps
      if: ${{ env.SDK == 'rust' }}
      uses: addnab/docker-run-action@v3
      with:
        image: ledgerhq/speculos:test
        options: -v ${{ github.workspace }}/app:/app
        run: |
            apt-get update && apt-get install -y gcc && apt-get install -y cargo
            pip install -r /app/${{ env.TEST_DIR }}/requirements.txt
            # test_version requires Cargo.toml
            pytest /app/${{ env.TEST_DIR }}/ --tb=short -v --device ${{ matrix.device }} -k "not test_version"
