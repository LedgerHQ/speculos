
/*******************************************************************************
*   Ledger Nano S - Secure firmware
*   (c) 2022 Ledger
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
********************************************************************************/

const unsigned char bitmapOPEN_SANS_EXTRABOLD_11PX[] = {
//ascii 0x0020
//ascii 0x0021
  0xB0, 0x6D, 0xC3, 0x06,
//ascii 0x0022
  0x80, 0x2D, 0x49,
//ascii 0x0023
  0x00, 0x12, 0xC9, 0x4F, 0xF9, 0x4B, 0x24, 0x12,
//ascii 0x0024
  0x88, 0xB7, 0x2C, 0x0E, 0x87, 0xA6, 0x1F, 0x02,
//ascii 0x0025
  0x00, 0x38, 0xB1, 0xC6, 0x0A, 0xFB, 0xF9, 0x8D,
  0x35, 0xD6, 0xC8, 0x01,
//ascii 0x0026
  0x00, 0x78, 0xD8, 0xB0, 0xC1, 0xC1, 0xDB, 0x3D,
  0x7B, 0xBE, 0x01,
//ascii 0x0027
  0xB0, 0x04,
//ascii 0x0028
  0x40, 0x66, 0x33, 0x33, 0x66, 0x04,
//ascii 0x0029
  0x20, 0x66, 0xCC, 0xCC, 0x66, 0x02,
//ascii 0x002A
  0x00, 0xD3, 0xFE, 0x9E, 0x07,
//ascii 0x002B
  0x00, 0xC0, 0x30, 0x3F, 0xC3,
//ascii 0x002C
  0x00, 0x00, 0xC0, 0x1A,
//ascii 0x002D
  0x00, 0x00, 0xF0, 0x0F,
//ascii 0x002E
  0x00, 0x00, 0xC0, 0x06,
//ascii 0x002F
  0x00, 0x23, 0xC6, 0x8C, 0x11, 0x03,
//ascii 0x0030
  0x00, 0x3C, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
  0x3C,
//ascii 0x0031
  0x00, 0xC6, 0x79, 0x18, 0x86, 0x61, 0x18,
//ascii 0x0032
  0x00, 0x8E, 0x0D, 0x06, 0xC3, 0x70, 0x18, 0x3E,
//ascii 0x0033
  0x00, 0x0F, 0x0C, 0xC6, 0x81, 0xC1, 0x60, 0x1E,
//ascii 0x0034
  0x00, 0x30, 0x38, 0x38, 0x34, 0x34, 0x7E, 0x30,
  0x30,
//ascii 0x0035
  0x80, 0x67, 0x18, 0x1E, 0x86, 0x61, 0x1E,
//ascii 0x0036
  0x00, 0x38, 0x0C, 0x04, 0x3E, 0x66, 0x66, 0x66,
  0x3C,
//ascii 0x0037
  0x00, 0x1F, 0x0C, 0x06, 0xC3, 0x60, 0x30, 0x0C,
//ascii 0x0038
  0x00, 0x3C, 0x66, 0x66, 0x3C, 0x66, 0x66, 0x66,
  0x3C,
//ascii 0x0039
  0x00, 0x3C, 0x66, 0x66, 0x66, 0x7C, 0x60, 0x30,
  0x1C,
//ascii 0x003A
  0x00, 0x6C, 0xC0, 0x06,
//ascii 0x003B
  0x00, 0x6C, 0xC0, 0x1A,
//ascii 0x003C
  0x00, 0x60, 0x66, 0x86, 0x61, 0x18,
//ascii 0x003D
  0x00, 0x00, 0x00, 0x3F, 0xF0, 0x03,
//ascii 0x003E
  0x00, 0x0C, 0xC3, 0x30, 0x33, 0x03,
//ascii 0x003F
  0xC0, 0x83, 0x61, 0x8E, 0x01, 0x18, 0x06,
//ascii 0x0040
  0x00, 0xE0, 0xC3, 0x98, 0xDD, 0x5B, 0x2F, 0xBD,
  0xF6, 0x7E, 0x06, 0xE0, 0x07,
//ascii 0x0041
  0x00, 0x18, 0x3C, 0x3C, 0x7E, 0x66, 0x7E, 0xE7,
  0xC3,
//ascii 0x0042
  0x00, 0x9F, 0xCD, 0xE6, 0xB1, 0xD9, 0x6C, 0x3E,
//ascii 0x0043
  0x00, 0x9E, 0xC1, 0x60, 0x30, 0x18, 0x0C, 0x3C,
//ascii 0x0044
  0x00, 0x3E, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
  0x3E,
//ascii 0x0045
  0x80, 0x67, 0x18, 0x9E, 0x61, 0x18, 0x1E,
//ascii 0x0046
  0x80, 0x6F, 0x18, 0x9E, 0x61, 0x18, 0x06,
//ascii 0x0047
  0x00, 0x7C, 0x06, 0x06, 0x76, 0x66, 0x66, 0x66,
  0x7C,
//ascii 0x0048
  0x00, 0x66, 0x66, 0x66, 0x7E, 0x66, 0x66, 0x66,
  0x66,
//ascii 0x0049
  0x60, 0x66, 0x66, 0x66, 0x06,
//ascii 0x004A
  0x80, 0x31, 0xC6, 0x18, 0x63, 0x8C, 0xB1, 0x03,
//ascii 0x004B
  0x00, 0xE6, 0x66, 0x36, 0x1E, 0x3E, 0x36, 0x66,
  0xE6,
//ascii 0x004C
  0x80, 0x61, 0x18, 0x86, 0x61, 0x18, 0x3E,
//ascii 0x004D
  0x00, 0x70, 0x9C, 0xE3, 0xBC, 0xE7, 0x3D, 0xEF,
  0x59, 0xCD, 0x6E, 0x76, 0x03,
//ascii 0x004E
  0x00, 0x9C, 0x39, 0xF3, 0xE6, 0xCD, 0x9E, 0x3D,
  0x73, 0xE6,
//ascii 0x004F
  0x00, 0xF8, 0x18, 0x33, 0x66, 0xCC, 0x98, 0x31,
  0x63, 0x7C,
//ascii 0x0050
  0x00, 0x9F, 0xCD, 0x66, 0xF3, 0x19, 0x0C, 0x06,
//ascii 0x0051
  0x00, 0xF8, 0x18, 0x33, 0x66, 0xCC, 0x98, 0x31,
  0x63, 0x7C, 0xC0, 0x00, 0x03,
//ascii 0x0052
  0x00, 0x1E, 0x36, 0x36, 0x36, 0x1E, 0x36, 0x36,
  0x66,
//ascii 0x0053
  0x00, 0x6F, 0x18, 0x0E, 0x87, 0xE7, 0x1E,
//ascii 0x0054
  0xC0, 0xCF, 0x30, 0x0C, 0xC3, 0x30, 0x0C,
//ascii 0x0055
  0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
  0x3C,
//ascii 0x0056
  0xC0, 0x3C, 0xCF, 0xB3, 0xE7, 0x79, 0x0C,
//ascii 0x0057
  0x00, 0x98, 0xB3, 0xDD, 0xEC, 0x66, 0x35, 0xAB,
  0x71, 0x87, 0x3B, 0xD8,
//ascii 0x0058
  0x00, 0xC3, 0x66, 0x3C, 0x3C, 0x3C, 0x3C, 0x66,
  0xC3,
//ascii 0x0059
  0x80, 0xB1, 0xCD, 0xC6, 0xC1, 0x60, 0x30, 0x18,
//ascii 0x005A
  0x80, 0x3F, 0x0C, 0x87, 0x61, 0x38, 0x0C, 0x7F,
//ascii 0x005B
  0xC0, 0x1B, 0x63, 0x8C, 0x31, 0xC6, 0x78,
//ascii 0x005C
  0x60, 0x08, 0x63, 0x18, 0x43, 0x18,
//ascii 0x005D
  0xE0, 0x31, 0xC6, 0x18, 0x63, 0x8C, 0x3D,
//ascii 0x005E
  0x00, 0x06, 0xC3, 0x23, 0x99, 0x01,
//ascii 0x005F
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0,
  0x03,
//ascii 0x0060
  0x0C, 0x0C,
//ascii 0x0061
  0x00, 0x00, 0xC0, 0x03, 0xF3, 0xCD, 0x66, 0x3E,
//ascii 0x0062
  0x00, 0x83, 0xC1, 0x67, 0xB3, 0xDB, 0x6D, 0x3E,
//ascii 0x0063
  0x00, 0x00, 0xF0, 0xC6, 0x71, 0x18, 0x3C,
//ascii 0x0064
  0x00, 0x18, 0x8C, 0x67, 0xBB, 0xDD, 0x6C, 0x3C,
//ascii 0x0065
  0x00, 0x00, 0x80, 0x67, 0xFE, 0x1F, 0x0C, 0x3C,
//ascii 0x0066
  0x00, 0x67, 0x7C, 0x86, 0x61, 0x18, 0x06,
//ascii 0x0067
  0x00, 0x00, 0xC0, 0x6F, 0xB3, 0x79, 0x0C, 0xBE,
  0xF1, 0xD8, 0x07,
//ascii 0x0068
  0x00, 0x83, 0xC1, 0x67, 0xB3, 0xD9, 0x6C, 0x36,
//ascii 0x0069
  0x60, 0x60, 0x66, 0x66, 0x06,
//ascii 0x006A
  0x80, 0x01, 0xC6, 0x18, 0x63, 0x8C, 0x31, 0x03,
//ascii 0x006B
  0x00, 0x83, 0xC1, 0xE6, 0xF3, 0x78, 0x6C, 0x76,
//ascii 0x006C
  0x60, 0x66, 0x66, 0x66, 0x06,
//ascii 0x006D
  0x00, 0x00, 0x00, 0x80, 0x76, 0xB6, 0xD9, 0x66,
  0x9B, 0x6D, 0xB6, 0x01,
//ascii 0x006E
  0x00, 0x00, 0x40, 0x67, 0xB3, 0xD9, 0x6C, 0x36,
//ascii 0x006F
  0x00, 0x00, 0x80, 0x63, 0xBB, 0xDF, 0x6D, 0x1C,
//ascii 0x0070
  0x00, 0x00, 0xC0, 0x67, 0xB3, 0xDB, 0x6D, 0x3E,
  0x83, 0xC1,
//ascii 0x0071
  0x00, 0x00, 0xC0, 0x67, 0xBB, 0xDD, 0x6C, 0x3E,
  0x18, 0x0C, 0x06,
//ascii 0x0072
  0x00, 0x00, 0xED, 0x8D, 0x31, 0x06,
//ascii 0x0073
  0x00, 0x00, 0x78, 0x86, 0xC7, 0xC3, 0x1E,
//ascii 0x0074
  0x00, 0x98, 0x6F, 0x8C, 0x31, 0x1C,
//ascii 0x0075
  0x00, 0x00, 0xC0, 0x66, 0xB3, 0xD9, 0x6C, 0x2E,
//ascii 0x0076
  0x00, 0x00, 0x60, 0x6C, 0xB3, 0xD9, 0x38, 0x1C,
//ascii 0x0077
  0x00, 0x00, 0x00, 0xC0, 0xCC, 0xB6, 0xF9, 0xE7,
  0x1F, 0x33, 0xCC,
//ascii 0x0078
  0x00, 0x00, 0xE0, 0x6E, 0xE3, 0x70, 0x6C, 0x77,
//ascii 0x0079
  0x00, 0x00, 0x60, 0x6C, 0xB3, 0xD1, 0x38, 0x1C,
  0x06, 0xC3,
//ascii 0x007A
  0x00, 0x00, 0xFC, 0x18, 0xC3, 0x18, 0x3F,
//ascii 0x007B
  0x80, 0x33, 0xC6, 0xCE, 0x61, 0x8C, 0x71,
//ascii 0x007C
  0x00, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3,
  0x30,
//ascii 0x007D
  0xE0, 0x18, 0x63, 0x38, 0x37, 0xC6, 0x1C,
//ascii 0x007E
  0x00, 0x00, 0x00, 0x6F, 0x0F,
//ascii 0x007F
  0x80, 0x27, 0x49, 0x92, 0x24, 0x49, 0x1E,
};

const bagl_font_character_t charactersOPEN_SANS_EXTRABOLD_11PX[96] = {
  {   3,   0,    0 }, //ascii 0x0020
  {   3,   4,    0 }, //ascii 0x0021
  {   6,   3,    4 }, //ascii 0x0022
  {   7,   8,    7 }, //ascii 0x0023
  {   6,   8,   15 }, //ascii 0x0024
  {  10,  12,   23 }, //ascii 0x0025
  {   9,  11,   35 }, //ascii 0x0026
  {   3,   2,   46 }, //ascii 0x0027
  {   4,   6,   48 }, //ascii 0x0028
  {   4,   6,   54 }, //ascii 0x0029
  {   6,   5,   60 }, //ascii 0x002A
  {   6,   5,   65 }, //ascii 0x002B
  {   3,   4,   70 }, //ascii 0x002C
  {   4,   4,   74 }, //ascii 0x002D
  {   3,   4,   78 }, //ascii 0x002E
  {   5,   6,   82 }, //ascii 0x002F
  {   8,   9,   88 }, //ascii 0x0030
  {   6,   7,   97 }, //ascii 0x0031
  {   7,   8,  104 }, //ascii 0x0032
  {   7,   8,  112 }, //ascii 0x0033
  {   8,   9,  120 }, //ascii 0x0034
  {   6,   7,  129 }, //ascii 0x0035
  {   8,   9,  136 }, //ascii 0x0036
  {   7,   8,  145 }, //ascii 0x0037
  {   8,   9,  153 }, //ascii 0x0038
  {   8,   9,  162 }, //ascii 0x0039
  {   3,   4,  171 }, //ascii 0x003A
  {   3,   4,  175 }, //ascii 0x003B
  {   5,   6,  179 }, //ascii 0x003C
  {   6,   6,  185 }, //ascii 0x003D
  {   5,   6,  191 }, //ascii 0x003E
  {   6,   7,  197 }, //ascii 0x003F
  {  10,  13,  204 }, //ascii 0x0040
  {   8,   9,  217 }, //ascii 0x0041
  {   7,   8,  226 }, //ascii 0x0042
  {   7,   8,  234 }, //ascii 0x0043
  {   8,   9,  242 }, //ascii 0x0044
  {   6,   7,  251 }, //ascii 0x0045
  {   6,   7,  258 }, //ascii 0x0046
  {   8,   9,  265 }, //ascii 0x0047
  {   8,   9,  274 }, //ascii 0x0048
  {   4,   5,  283 }, //ascii 0x0049
  {   5,   8,  288 }, //ascii 0x004A
  {   8,   9,  296 }, //ascii 0x004B
  {   6,   7,  305 }, //ascii 0x004C
  {  11,  13,  312 }, //ascii 0x004D
  {   9,  10,  325 }, //ascii 0x004E
  {   9,  10,  335 }, //ascii 0x004F
  {   7,   8,  345 }, //ascii 0x0050
  {   9,  13,  353 }, //ascii 0x0051
  {   8,   9,  366 }, //ascii 0x0052
  {   6,   7,  375 }, //ascii 0x0053
  {   6,   7,  382 }, //ascii 0x0054
  {   8,   9,  389 }, //ascii 0x0055
  {   6,   7,  398 }, //ascii 0x0056
  {  11,  12,  405 }, //ascii 0x0057
  {   8,   9,  417 }, //ascii 0x0058
  {   7,   8,  426 }, //ascii 0x0059
  {   7,   8,  434 }, //ascii 0x005A
  {   5,   7,  442 }, //ascii 0x005B
  {   5,   6,  449 }, //ascii 0x005C
  {   5,   7,  455 }, //ascii 0x005D
  {   7,   6,  462 }, //ascii 0x005E
  {   6,   9,  468 }, //ascii 0x005F
  {   7,   2,  477 }, //ascii 0x0060
  {   7,   8,  479 }, //ascii 0x0061
  {   7,   8,  487 }, //ascii 0x0062
  {   6,   7,  495 }, //ascii 0x0063
  {   7,   8,  502 }, //ascii 0x0064
  {   7,   8,  510 }, //ascii 0x0065
  {   6,   7,  518 }, //ascii 0x0066
  {   7,  11,  525 }, //ascii 0x0067
  {   7,   8,  536 }, //ascii 0x0068
  {   4,   5,  544 }, //ascii 0x0069
  {   5,   8,  549 }, //ascii 0x006A
  {   7,   8,  557 }, //ascii 0x006B
  {   4,   5,  565 }, //ascii 0x006C
  {  10,  12,  570 }, //ascii 0x006D
  {   7,   8,  582 }, //ascii 0x006E
  {   7,   8,  590 }, //ascii 0x006F
  {   7,  10,  598 }, //ascii 0x0070
  {   7,  11,  608 }, //ascii 0x0071
  {   5,   6,  619 }, //ascii 0x0072
  {   6,   7,  625 }, //ascii 0x0073
  {   5,   6,  632 }, //ascii 0x0074
  {   7,   8,  638 }, //ascii 0x0075
  {   7,   8,  646 }, //ascii 0x0076
  {  10,  11,  654 }, //ascii 0x0077
  {   7,   8,  665 }, //ascii 0x0078
  {   7,  10,  673 }, //ascii 0x0079
  {   6,   7,  683 }, //ascii 0x007A
  {   5,   7,  690 }, //ascii 0x007B
  {   6,   9,  697 }, //ascii 0x007C
  {   5,   7,  706 }, //ascii 0x007D
  {   6,   5,  713 }, //ascii 0x007E
  {   6,   7,  718 }, //ascii 0x007F
};

const bagl_font_t fontOPEN_SANS_EXTRABOLD_11PX = {
  BAGL_FONT_OPEN_SANS_EXTRABOLD_11px, // font id
  1, // bpp => 1 for B&W
  12, // font height in pixels
  9, // baseline height in pixels
  0, // kerning - specific to the font
  0x20, // first character
  0x7F, // last character
  charactersOPEN_SANS_EXTRABOLD_11PX,
  bitmapOPEN_SANS_EXTRABOLD_11PX
};
